// Exercise 12.8: Mongo command-line interface

// start mongo container from the directory of ./todo-app/todo-backend
% docker compose -f docker-compose.dev.yml up

// on another terminal, enter the running container
% docker ps
CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS                     NAMES
96c37c558819   mongo     "docker-entrypoint.sâ€¦"   16 seconds ago   Up 15 seconds   0.0.0.0:3456->27017/tcp   todo-backend-mongo-1

% docker exec -it 96c37c558819 bash

// inside the container, run mongo shell
root@96c37c558819:/# mongosh -u root -p example

// show databases
test> show dbs
admin         100.00 KiB
config         60.00 KiB
local          72.00 KiB
the_database   40.00 KiB

// enter the_database
test> use the_database
switched to db the_database

// show collections
the_database> show collections
todos

// show todos
the_database> db.todos.find({})
[
  {
    _id: ObjectId('65ba7ced22b92e76fdb5c55e'),
    text: 'Write code',
    done: true
  },
  {
    _id: ObjectId('65ba7ced22b92e76fdb5c55f'),
    text: 'Learn about containers',
    done: false
  }
]

// insert a new todo
the_database> db.todos.insertOne({text: 'Increase the number of tools in my toolbelt', done: false})
{
  acknowledged: true,
  insertedId: ObjectId('65ba7fc0bf9cd8fd8d2bc85a')
}

// show todos
the_database> db.todos.find({})
[
  {
    _id: ObjectId('65ba7ced22b92e76fdb5c55e'),
    text: 'Write code',
    done: true
  },
  {
    _id: ObjectId('65ba7ced22b92e76fdb5c55f'),
    text: 'Learn about containers',
    done: false
  },
  {
    _id: ObjectId('65ba7fc0bf9cd8fd8d2bc85a'),
    text: 'Increase the number of tools in my toolbelt',
    done: false
  }
]

// on another terminal, start express server at the directory of ./todo-app/todo-backend
% MONGO_URL=mongodb://the_username:the_password@localhost:3456/the_database npm run dev

// check the server at http://localhost:3000/todos
